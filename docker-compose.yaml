version: "3"
services:
  # src: https://registry.hub.docker.com/_/caddy
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - /hs/caddy/data:/data
    labels:
      hs__pod: support

  # docs: https://jellyfin.org/docs/general/administration/installing.html#docker
  # src: https://hub.docker.com/r/jellyfin/jellyfin
  jellyfin:
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    volumes:
      - /hs/jellyfin/config:/config
      - /hs/jellyfin/cache:/cache
      - /media:/media
    labels:
      hs__pod: jellyfin

  # Setup a wiregaurd VPN that other containers can connect to by
  # using `network_mode: "service:gluetun"`. This will tell those
  # containers to share this network stack, meaning all services
  # connected to this VPN must have distinct ports, and those ports
  # now have to accessed via gluetun's name instead of their own
  #
  # docs: https://github.com/qdm12/gluetun/wiki/Connect-a-container-to-gluetun
  # src: https://hub.docker.com/r/qmcgaw/gluetun
  gluetun:
    container_name: gluetun # required for containers to connect
    image: qmcgaw/gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    volumes:
      - /hs/gluetun/config:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY:?required}
      - WIREGUARD_ADDRESSES=10.64.201.123/32
      - SERVER_CITIES=Los Angeles CA
      - TZ=Australia/Melbourne

  # These containers are all tightly coupled by their use of the
  # "data" directory, this needs to be one mount shared across all so
  # the programs can moved downloaded files around and hardlink them
  # when they're complete but seeding.
  #
  # src: https://github.com/Luctia/ezarr/blob/main/docker-compose.yml
  radarr:
    network_mode: "service:gluetun"
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0 # FIXME permissions
      - TZ=Australia/Melbourne
    volumes:
      - /hs/radarr/config:/config
      - /media/data:/data
    labels:
      hs__pod: servarr
  sonarr:
    network_mode: "service:gluetun"
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=Australia/Melbourne
    volumes:
      - /hs/sonarr/config:/config
      - /media/data:/data
    labels:
      hs__pod: servarr
  prowlarr:
    network_mode: "service:gluetun"
    image: lscr.io/linuxserver/prowlarr:develop
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=Australia/Melbourne
    volumes:
      - /hs/prowlarr/config:/config
  qbittorrent:
    network_mode: "service:gluetun"
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=Australia/Melbourne
      - WEBUI_PORT=8080
    volumes:
      - /hs/qbittorrent/config:/config
      - /media/data/downloads:/downloads
    labels:
      hs__pod: servarr

  # docs: https://docs.mealie.io/
  # src: https://registry.hub.docker.com/r/hkotel/mealie
  mealie:
    image: hkotel/mealie:latest
    restart: unless-stopped
    volumes:
      - /hs/mealie/data:/app/data
    environment:
      - TZ=Australia/Melbourne

  # docs: https://doc.wallabag.org/en/
  # src: https://hub.docker.com/r/wallabag/wallabag/
  wallabag:
    image: wallabag/wallabag
    restart: unless-stopped
    environment:
      - SYMFONY__ENV__DATABASE_DRIVER=pdo_pgsql
      - SYMFONY__ENV__DATABASE_HOST=wallabag_db
      - SYMFONY__ENV__DATABASE_PORT=5432
      - SYMFONY__ENV__DATABASE_NAME=wallabag
      - POSTGRES_USER=wallabag-super-user
      - POSTGRES_PASSWORD=${WALLABAG_DB_PASSWORD:?required}
      - SYMFONY__ENV__DATABASE_USER=wallabag
      - SYMFONY__ENV__DATABASE_PASSWORD=${WALLABAG_DB_PASSWORD:?required}
      - SYMFONY__ENV__REDIS_HOST=wallabag_redis
      - SYMFONY__ENV__FOSUSER_REGISTRATION=false
      - SYMFONY__ENV__DOMAIN_NAME=https://wallabag.h.jackrose.co.nz
      - SYMFONY__ENV__SERVER_NAME="Wallabag@kakapo"
    volumes:
      - /hs/wallabag/images:/var/www/wallabag/web/assets/images
    healthcheck:
      test: ["CMD", "wget" ,"--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 1m
      timeout: 3s
    depends_on:
      - wallabag_db
      - wallabag_redis
    labels:
      hs__pod: wallabag
  wallabag_db:
    image: postgres:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=wallabag-super-user
      - POSTGRES_PASSWORD=${WALLABAG_DB_PASSWORD:?required}
    volumes:
      - /hs/wallabag/db:/var/lib/postgresql
    labels:
      hs__pod: wallabag
  wallabag_redis:
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 3s
    labels:
      hs__pod: wallabag

  # docs: https://www.home-assistant.io/installation/linux#docker-compose
  home-assistant:
    image: homeassistant/home-assistant
    restart: unless-stopped
    ports:
      - 8123:8123
    volumes:
      - /hs/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    labels:
      hs__pod: home-assistant
  mosquitto:
    image: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
    volumes:
      - /hs/mosquitto/config:/mosquitto/config
      - /hs/mosquitto/data:/mosquitto/data
      - /hs/mosquitto/log:/mosquitto/log
    environment:
      - TZ=Australia/Melbourne
    labels:
      hs__pod: home-assistant
  nodered:
    build:
      context: images/nodered
    restart: unless-stopped
    volumes:
      - /hs/nodered/data:/data
    environment:
      - TZ=Australia/Melbourne
    labels:
      hs__pod: home-assistant
